name: Team Flow Frontend Pipeline

on:
  push:
    branches: ["main"]

jobs:
  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run linter
        run: bun run lint

      - name: Run type checking
        run: bunx tsc --noEmit

      - name: Run tests (if available)
        run: bun test || echo "No tests configured"

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build for production
        run: bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag
        id: set-tag
        run: |
          SHORT_SHA=$(echo "$GITHUB_SHA" | cut -c1-8)
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "IMAGE_REPO=it-forelead/teamflow-frontend" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.set-tag.outputs.IMAGE_REPO }}:${{ steps.set-tag.outputs.IMAGE_TAG }}
            ${{ steps.set-tag.outputs.IMAGE_REPO }}:latest
